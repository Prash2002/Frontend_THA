{"version":3,"sources":["components/WeatherCard.jsx","token/token.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherCard","useState","placeData","setPlaceData","place","setPlace","className","value","onChange","e","target","type","placeholder","onClick","fetch","then","res","json","data","console","log","cod","message","name","src","weather","icon","alt","style","paddingTop","borderBottom","marginBottom","main","temp","toFixed","description","background","border","wind","speed","opacity","humidity","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MA+FeA,EA5FK,WAClB,MAAkCC,mBAAS,MAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,UAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAYA,OACE,gCACE,sBAAKC,UAAU,oCAAf,UACE,qBAAKA,UAAU,UAAf,SACE,uBACEC,MAAOH,EACPI,SAAU,SAACC,GAAD,OAAOJ,EAASI,EAAEC,OAAOH,QACnCI,KAAK,OACLL,UAAU,eACVM,YAAY,SACZ,aAAW,SACX,mBAAiB,mBAGrB,wBAAQN,UAAU,wBAAwBO,QAzBhD,WACEC,MAAM,qDAAD,OACkDV,EADlD,kBCPK,qCDUPW,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZf,EAAae,OAkBb,uBAIa,OAAdhB,EACC,kBACoB,QAAlBA,EAAUmB,IACZnB,EAAUoB,QAEV,sBAAKhB,UAAU,aAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BJ,EAAUqB,OACtC,qBACEC,IAAG,4CAAuCtB,EAAUuB,QAAQ,GAAGC,KAA5D,WACHpB,UAAU,wBACVqB,IAAI,gBAEN,sBACErB,UAAU,YACVsB,MAAO,CACLC,WAAY,MACZC,aAAc,sBACdC,aAAc,QALlB,UAQE,oBAAGzB,UAAU,cAAb,UACE,uBAAMA,UAAU,OAAhB,WACIJ,EAAU8B,KAAKC,KAAO,QAAQC,QAAQ,GAAI,OAE9C,sBAAM5B,UAAU,SAAhB,qBAGF,mBAAGA,UAAU,eAAb,SAA6BJ,EAAUuB,QAAQ,GAAGO,OAClD,mBAAG1B,UAAU,YAAb,SAA0BJ,EAAUuB,QAAQ,GAAGU,iBAEjD,sBAAK7B,UAAU,MAAf,UACE,qBACEA,UAAU,aACVsB,MAAO,CAAEQ,WAAY,cAAeC,OAAQ,QAF9C,SAIE,sBAAK/B,UAAU,YAAf,UACE,qBAAIA,UAAU,aAAd,UAA4BJ,EAAUoC,KAAKC,MAA3C,YACA,oBAAIjC,UAAU,qBAAqBsB,MAAO,CAAEY,QAAS,OAArD,uBAKJ,qBACElC,UAAU,aACVsB,MAAO,CAAEQ,WAAY,cAAeC,OAAQ,QAF9C,SAIE,sBAAK/B,UAAU,YAAf,UACE,qBAAIA,UAAU,aAAd,UAA4BJ,EAAU8B,KAAKS,SAA3C,QACA,oBAAInC,UAAU,qBAAqBsB,MAAO,CAAEY,QAAS,OAArD,qCExEDE,MARf,WACE,OACE,qBAAKpC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.d0af406b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TOKEN from \"../token/token.js\";\r\n\r\nconst WeatherCard = () => {\r\n  const [placeData, setPlaceData] = useState(null);\r\n  const [place, setPlace] = useState(\"London\");\r\n  function fetchApiData() {\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${place}&appid=${TOKEN}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setPlaceData(data);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"search row justify-content-center\">\r\n        <div className=\" col-4 \">\r\n          <input\r\n            value={place}\r\n            onChange={(e) => setPlace(e.target.value)}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search\"\r\n            aria-label=\"Search\"\r\n            aria-describedby=\"basic-addon1\"\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary col-2\" onClick={fetchApiData}>\r\n          Search\r\n        </button>\r\n      </div>\r\n      {placeData === null ? (\r\n        \"Search for data\"\r\n      ) : placeData.cod === \"404\" ? (\r\n        placeData.message\r\n      ) : (\r\n        <div className=\"card wCard\">\r\n          <h5 className=\"card-title\">{placeData.name}</h5>\r\n          <img\r\n            src={`https://openweathermap.org/img/wn/${placeData.weather[0].icon}@2x.png`}\r\n            className=\"card-img-top icon-img\"\r\n            alt=\"weather img\"\r\n          />\r\n          <div\r\n            className=\"card-body\"\r\n            style={{\r\n              paddingTop: \"0px\",\r\n              borderBottom: \"1px #ffffff94 solid\",\r\n              marginBottom: \"20px\",\r\n            }}\r\n          >\r\n            <p className=\"card-title \">\r\n              <span className=\"temp\">\r\n                {(placeData.main.temp - 273.16).toFixed(1)}{\" \"}\r\n              </span>\r\n              <span className=\"degree\">Â°</span>\r\n            </p>\r\n\r\n            <p className=\"card-text h1\">{placeData.weather[0].main}</p>\r\n            <p className=\"card-text\">{placeData.weather[0].description}</p>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"card col-6\"\r\n              style={{ background: \"transparent\", border: \"none\" }}\r\n            >\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">{placeData.wind.speed} km/hr</h4>\r\n                <h6 className=\"card-subtitle mb-2\" style={{ opacity: \"0.7\" }}>\r\n                  Wind\r\n                </h6>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"card col-6\"\r\n              style={{ background: \"transparent\", border: \"none\" }}\r\n            >\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">{placeData.main.humidity} %</h4>\r\n                <h6 className=\"card-subtitle mb-2\" style={{ opacity: \"0.7\" }}>\r\n                  Humidity\r\n                </h6>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","const TOKEN = \"1a31fc618c7e36a25c7ef21714d4f8d1\";\r\n\r\nexport default TOKEN;\r\n","import \"./App.css\";\nimport WeatherCard from \"./components/WeatherCard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WeatherCard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}