{"version":3,"sources":["components/MemeCard.jsx","components/MemeEdit.jsx","token.jsx","components/MemeHome.jsx","App.js","index.js"],"names":["MemeCard","props","className","onClick","setEdit","setEditMeme","template","src","url","alt","srcSet","name","MemeEdit","useState","boxes","setBoxes","complete","setComplete","mem","setMem","console","log","meme","generate","a","id","i","box_count","undefined","text","fetch","data","json","jsonData","Array","map","index","placeholder","onChange","e","target","value","MemeHome","templates","setTemplates","edit","editMeme","useEffect","memes","fetchMemes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAeeA,EAbE,SAACC,GAKhB,OACE,sBAAKC,UAAU,WAAWC,QALV,WAChBF,EAAMG,SAAQ,GACdH,EAAMI,YAAYJ,EAAMK,WAGxB,UACE,qBAAKC,IAAKN,EAAMK,SAASE,IAAKC,IAAI,GAAGC,OAAO,KAC5C,4BAAIT,EAAMK,SAASK,W,OCiDVC,EAzDE,SAACX,GAChB,MAA0BY,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAsBJ,mBAAS,IAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KACAC,QAAQC,IAAIpB,EAAMqB,MAElB,IAIMC,EAAQ,uCAAG,kCAAAC,EAAA,sDAEf,IADIhB,EADW,4DACgDP,EAAMqB,KAAKG,GAD3D,qBCZF,YDYE,qBCXN,cDaDC,EAAE,EAAGA,EAAEzB,EAAMqB,KAAKK,UAAWD,SACrBE,IAAXd,EAAMY,KAAgBZ,EAAMY,GAAG,CAAE,KAAO,WAAP,OAAmBA,EAAI,KAC3DlB,GAAG,iBAAckB,EAAd,mBAA0BZ,EAAMY,GAAGG,MAJzB,gBAMIC,MAAMtB,GANV,cAMTuB,EANS,gBAOQA,EAAKC,OAPb,OAOTC,EAPS,OAQfb,QAAQC,IAAIY,GACZd,EAAOc,EAASF,KAAKvB,KACrBS,GAAY,GAVG,4CAAH,qDAYd,OAEE,sBAAKf,UAAU,WAAf,UACE,4BAAID,EAAMqB,KAAKX,OAGbK,EAAU,8BAER,qBAAKT,IAAKW,MAEhB,qCACI,qBAAKX,IAAKN,EAAMqB,KAAKd,MACvB,qBAAKN,UAAU,QAAf,SACG,YAAIgC,MAAMjC,EAAMqB,KAAKK,YAAYQ,KAAI,SAACT,EAAGU,GAExC,OACE,uBAEAC,YAAW,kBAAaD,EAAQ,GAChCE,SAAU,SAACC,GACTzB,EAAMsB,GAAS,CAAEP,KAAMU,EAAEC,OAAOC,OAChC1B,EAASD,KAJNsB,QAUX,wBAAQjC,QAASoB,EAAjB,8BAEA,wBAAQpB,QA7CK,WACfF,EAAMG,SAAQ,IA4CZ,iCETSsC,EAxCE,WACf,MAAkC7B,mBAAS,IAA3C,mBAAO8B,EAAP,KAAkBC,EAAlB,KACA,EAAwB/B,oBAAS,GAAjC,mBAAOgC,EAAP,KAAazC,EAAb,KACA,EAAgCS,qBAAhC,mBAAOiC,EAAP,KAAiBzC,EAAjB,KAYA,OAVA0C,qBAAU,YACQ,uCAAG,gCAAAvB,EAAA,sEACAM,MAAM,qCADN,cACbC,EADa,gBAEIA,EAAKC,OAFT,cAEbC,EAFa,gBAGCA,EAASF,KAAKiB,MAHf,OAGbA,EAHa,OAIjBJ,EAAaI,GAJI,4CAAH,qDAMhBC,KACC,IAGD,mCACGJ,EACC,cAAC,EAAD,CAAUvB,KAAMwB,EAAU1C,QAASA,IAEnC,qCACE,gDACA,qBAAKF,UAAU,QAAf,SACGyC,EAAUR,KAAI,SAAC7B,GACd,OACE,cAAC,EAAD,CAEEA,SAAUA,EACVF,QAASA,EACTC,YAAaA,GAHRC,EAASmB,eCnBjByB,MARf,WACE,OACE,qBAAKhD,UAAU,MAAf,SACE,cAAC,EAAD,OCDNiD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.23c994cf.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst MemeCard = (props) => {\r\n  const memeClick = () => {\r\n    props.setEdit(true);\r\n    props.setEditMeme(props.template);\r\n  };\r\n  return (\r\n    <div className=\"memeCard\" onClick={memeClick}>\r\n      <img src={props.template.url} alt=\"\" srcSet=\"\" />\r\n      <p>{props.template.name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemeCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { username, pass } from \"../token\";\r\nconst MemeEdit = (props) => {\r\n  const [boxes, setBoxes] = useState([]);\r\n  const [complete, setComplete] = useState(false);\r\n  const [mem, setMem] = useState('');\r\n  console.log(props.meme);\r\n\r\n  const diffTemp = () => {\r\n    props.setEdit(false);\r\n  };\r\n\r\n  const generate = async () => {\r\n    var url = `https://api.imgflip.com/caption_image?template_id=${props.meme.id}&username=${username}&password=${pass}`;\r\n    for(var i=0; i<props.meme.box_count; i++){\r\n      if(boxes[i]===undefined) boxes[i]={ \"text\": `Caption ${i + 1}`};\r\n      url += `&boxes[${i}][text]=${boxes[i].text}`;\r\n    };\r\n    const data = await fetch(url);\r\n    const jsonData = await data.json();\r\n    console.log(jsonData);\r\n    setMem(jsonData.data.url);\r\n    setComplete(true);\r\n  };\r\n  return (\r\n    \r\n    <div className=\"editMeme\">\r\n      <p>{props.meme.name}</p>\r\n      \r\n      {\r\n        complete? <div>\r\n          \r\n          <img src={mem} />\r\n        </div>:\r\n    <>\r\n        <img src={props.meme.url} />\r\n      <div className=\"input\">\r\n        {[...Array(props.meme.box_count)].map((i, index) => {\r\n          \r\n          return (\r\n            <input\r\n            key={index}\r\n            placeholder={`Caption ${index + 1}`}\r\n            onChange={(e) => {\r\n              boxes[index] = { text: e.target.value };\r\n              setBoxes(boxes);\r\n            }}\r\n            ></input>\r\n            );\r\n          })}\r\n      </div>\r\n      <button onClick={generate}>Generate Meme</button></>\r\n        }\r\n      <button onClick={diffTemp}>Choose Template</button>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default MemeEdit;\r\n","const username = \"prash2002\";\r\nconst pass = \"prash*2002\";\r\n\r\nexport { username, pass };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MemeCard from \"./MemeCard\";\r\nimport MemeEdit from \"./MemeEdit\";\r\n\r\nconst MemeHome = () => {\r\n  const [templates, setTemplates] = useState([]);\r\n  const [edit, setEdit] = useState(false);\r\n  const [editMeme, setEditMeme] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchMemes = async () => {\r\n      var data = await fetch(\"https://api.imgflip.com/get_memes\");\r\n      var jsonData = await data.json();\r\n      var memes = await jsonData.data.memes;\r\n      setTemplates(memes);\r\n    };\r\n    fetchMemes();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {edit ? (\r\n        <MemeEdit meme={editMeme} setEdit={setEdit} />\r\n      ) : (\r\n        <>\r\n          <h1>Meme Generator</h1>\r\n          <div className=\"memes\">\r\n            {templates.map((template) => {\r\n              return (\r\n                <MemeCard\r\n                  key={template.id}\r\n                  template={template}\r\n                  setEdit={setEdit}\r\n                  setEditMeme={setEditMeme}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MemeHome;\r\n","import \"./App.css\";\nimport MemeHome from \"./components/MemeHome\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MemeHome />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}