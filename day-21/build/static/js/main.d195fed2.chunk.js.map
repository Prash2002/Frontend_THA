{"version":3,"sources":["components/Form.jsx","components/EditForm.jsx","components/Item.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","food","setFood","cal","setCal","onSubmit","event","alert","preventDefault","setDiet","diet","length","htmlFor","type","name","id","value","onChange","e","target","EditForm","title","editedItem","setEdit","className","Item","ans","find","x","edit","onClick","newDiet","filter","i","App","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d195fed2.chunk.js","sourcesContent":["import React , {useState} from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport './Form.css'\r\nconst Form = (props) => {\r\n    const [food, setFood] = useState(\"\");\r\n    const [cal, setCal] = useState(0);\r\n\r\n    function submitForm(event){\r\n        if(food===\"\" || cal<=0){\r\n            alert(\"Enter correct values\");\r\n            event.preventDefault();\r\n        }\r\n        else{\r\n            event.preventDefault();\r\n            props.setDiet([...props.diet, {\"id\": props.diet.length ,\"title\": food, \"cal\": cal}])\r\n            setFood(\"\");\r\n            setCal(0);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitForm}>\r\n            <label htmlFor=\"item\">Food: </label>\r\n            <input type=\"text\" name=\"item\" id=\"item\" value={food} onChange={(e)=>setFood(e.target.value)} />\r\n            <label htmlFor=\"calory\">Calories: </label>\r\n            <input type=\"number\" name=\"calory\" id=\"calory\" value={cal} onChange={(e)=>setCal(e.target.value)} />\r\n            <br />\r\n            <button><AddIcon /></button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React , {useState} from 'react';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nconst EditForm = (props) => {\r\n    const [food, setFood] = useState(props.diet[props.id].title);\r\n    const [cal, setCal] = useState(props.diet[props.id].cal);\r\n\r\n    function submitForm(event){\r\n        event.preventDefault();\r\n        var editedItem = {\"id\": props.id ,\"title\": food, \"cal\": cal};\r\n        props.diet[props.id] = editedItem;\r\n        props.setDiet(props.diet);\r\n        props.setEdit(false);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitForm} className=\"editForm\">\r\n            <label htmlFor=\"item\">Food: </label>\r\n            <input type=\"text\" name=\"item\" id=\"item\" value={food} onChange={(e)=>setFood(e.target.value)} />\r\n            <label htmlFor=\"calory\">Calories: </label>\r\n            <input type=\"number\" name=\"calory\" id=\"calory\" value={cal} onChange={(e)=>setCal(e.target.value)} />\r\n            <br />\r\n            <button><DoneIcon /></button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default EditForm\r\n","import React , {useState} from 'react'\r\nimport EditForm from './EditForm';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst Item = (props) => {\r\n    var ans = props.diet.find(x => x.id === props.id);\r\n    const [edit, setEdit] = useState(false);\r\n    function onEdit(){\r\n        setEdit(true);\r\n    }\r\n    function onDelete(){\r\n        \r\n        var newDiet = props.diet.filter((i)=> i.id!==props.id)\r\n        props.setDiet(newDiet)\r\n    }\r\n    return (\r\n        <div className=\"item\">\r\n            {\r\n            edit? \r\n            <EditForm id={props.id} setEdit={setEdit} diet={props.diet} setDiet={props.setDiet}/>\r\n            :\r\n                    <>\r\n                        <div className=\"item-text\">\r\n                            <h3 className=\"heading\">{ans.title}: </h3>\r\n                            <p className=\"details\">You have consumed {ans.cal} calories</p>\r\n                        </div>\r\n                        <div className=\"item-btns\">\r\n                            <button onClick={onEdit}><EditIcon /></button>\r\n                            <br />\r\n                            <button onClick={onDelete}><DeleteIcon /></button>\r\n                        </div>\r\n                    </>\r\n                \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import Form from './components/Form';\nimport './App.css';\nimport React , {useState} from 'react';\nimport Item from './components/Item';\n\nfunction App() {\n  const [diet, setDiet] = useState([]);\n  // console.log((diet));\n  return (\n    <div className=\"App\">\n      <Form diet={diet} setDiet={setDiet} />\n      {\n        diet.map(i => {\n          return <Item key={i.id} id={i.id} diet={diet} setDiet={setDiet}/>\n        })\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}