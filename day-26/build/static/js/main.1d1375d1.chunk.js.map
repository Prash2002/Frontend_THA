{"version":3,"sources":["components/Form.jsx","actions/index.js","App.js","reportWebVitals.js","reducer/formReducer.jsx","reducer/index.jsx","store.js","index.js"],"names":["Form","dispatch","useDispatch","type","placeholder","onChange","inp","payload","target","value","App","formfill","useSelector","state","form","className","name","email","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","formReducer","action","console","log","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAwBeA,EApBF,WACX,IAAMC,EAAWC,cACjB,OACE,8BACE,iCACE,uBACEC,KAAK,OACLC,YAAY,OACZC,SAAU,SAACC,GAAD,OAASL,ECXpB,CACLE,KAAM,OACNI,QDS6CD,EAAIE,OAAOC,WAEpD,uBACEN,KAAK,OACLC,YAAY,QACZC,SAAU,SAACC,GAAD,OAASL,ECTpB,CACLE,KAAM,QACNI,QDO8CD,EAAIE,OAAOC,iBED9CC,MAXf,WACE,IAAMC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAC9C,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,yCAAYJ,EAASK,QACrB,0CAAaL,EAASM,aCCbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cCPRQ,EAAe,CACnBX,KAAM,GACNC,MAAO,IAqBMW,EAlBK,WAAmC,IAAlCf,EAAiC,uDAAzBc,EAAcE,EAAW,uCACpD,OAAQA,EAAO1B,MACb,IAAK,OAEH,OADA2B,QAAQC,IAAIF,EAAOtB,SACZ,2BACFM,GADL,IAEEG,KAAMa,EAAOtB,UAEjB,IAAK,QACH,OAAO,2BACFM,GADL,IAEEI,MAAOY,EAAOtB,UAElB,QACE,OAAOM,ICZEmB,EAJKC,YAAgB,CAClCnB,KAAMc,ICCOM,EAFDC,YAAYH,GCK1BI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.1d1375d1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { nameAction, emailAction } from \"../actions/index\";\r\n\r\nconst Form = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          onChange={(inp) => dispatch(nameAction(inp.target.value))}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          onChange={(inp) => dispatch(emailAction(inp.target.value))}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","const nameAction = (input) => {\r\n  return {\r\n    type: \"NAME\",\r\n    payload: input,\r\n  };\r\n};\r\n\r\nconst emailAction = (input) => {\r\n  return {\r\n    type: \"EMAIL\",\r\n    payload: input,\r\n  };\r\n};\r\n\r\nexport { nameAction, emailAction };\r\n","import \"./App.css\";\nimport Form from \"./components/Form\";\n\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  const formfill = useSelector((state) => state.form);\n  return (\n    <div className=\"App\">\n      <Form />\n      <div>Name: {formfill.name}</div>\n      <div>Email: {formfill.email}</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n  name: \"\",\r\n  email: \"\",\r\n};\r\n\r\nconst formReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"NAME\":\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        name: action.payload,\r\n      };\r\n    case \"EMAIL\":\r\n      return {\r\n        ...state,\r\n        email: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default formReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport formReducer from \"./formReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  form: formReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}